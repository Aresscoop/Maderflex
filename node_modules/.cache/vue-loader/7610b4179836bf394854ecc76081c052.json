{"remainingRequest":"/Users/manu/Documents/GitHub/Maderflex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/manu/Documents/GitHub/Maderflex/src/views/page-case-detail.vue?vue&type=template&id=7f1b35b6&","dependencies":[{"path":"/Users/manu/Documents/GitHub/Maderflex/src/views/page-case-detail.vue","mtime":1610097062000},{"path":"/Users/manu/Documents/GitHub/Maderflex/node_modules/cache-loader/dist/cjs.js","mtime":1687165589011},{"path":"/Users/manu/Documents/GitHub/Maderflex/node_modules/cache-loader/dist/cjs.js","mtime":1687165589011},{"path":"/Users/manu/Documents/GitHub/Maderflex/node_modules/babel-loader/lib/index.js","mtime":1687166098388},{"path":"/Users/manu/Documents/GitHub/Maderflex/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1687166106161},{"path":"/Users/manu/Documents/GitHub/Maderflex/node_modules/cache-loader/dist/cjs.js","mtime":1687165589011},{"path":"/Users/manu/Documents/GitHub/Maderflex/node_modules/vue-loader/lib/index.js","mtime":1687166106161}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQo8ZGl2Pg0KICAgIDxOYXZiYXIgLz4NCg0KICAgIDxzZWN0aW9uIGNsYXNzPSJiZy1oYWxmIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctOCBjb2wtbWQtMTAiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLXRpdGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9InRpdGxlIG1iLTQiPlNvY2lhbCBNZWRpYSAmIFNtYWxsIEJ1c2luZXNzPC9oND4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL2Jsb2cvMDUuanBnIiBjbGFzcz0iaW1nLWZsdWlkIHJvdW5kZWQtbWQgc2hhZG93LW1kIiBhbHQ9IiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LW11dGVkIG1iLTAgbXQtNCI+VGhpcyBpcyByZXF1aXJlZCB3aGVuLCBmb3IgZXhhbXBsZSwgdGhlIGZpbmFsIHRleHQgaXMgbm90IHlldCBhdmFpbGFibGUuIER1bW15IHRleHQgaXMgYWxzbyBrbm93biBhcyAnZmlsbCB0ZXh0Jy4gSXQgaXMgc2FpZCB0aGF0IHNvbmcgY29tcG9zZXJzIG9mIHRoZSBwYXN0IHVzZWQgZHVtbXkgdGV4dHMgYXMgbHlyaWNzIHdoZW4gd3JpdGluZyBtZWxvZGllcyBpbiBvcmRlciB0byBoYXZlIGEgJ3JlYWR5LW1hZGUnIHRleHQgdG8gc2luZyB3aXRoIHRoZSBtZWxvZHkuIER1bW15IHRleHRzIGhhdmUgYmVlbiBpbiB1c2UgYnkgdHlwZXNldHRlcnMgc2luY2UgdGhlIDE2dGggY2VudHVyeS48L3A+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibXktNCI+Q2hhbGxlbmdlczwvaDQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1tdXRlZCI+RHVlIHRvIGl0cyB3aWRlc3ByZWFkIHVzZSBhcyBmaWxsZXIgdGV4dCBmb3IgbGF5b3V0cywgbm9uLXJlYWRhYmlsaXR5IGlzIG9mIGdyZWF0IGltcG9ydGFuY2U6IGh1bWFuIHBlcmNlcHRpb24gaXMgdHVuZWQgdG8gcmVjb2duaXplIGNlcnRhaW4gcGF0dGVybnMgYW5kIHJlcGV0aXRpb25zIGluIHRleHRzLjwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LW11dGVkIG1iLTAiPkZvciB0aGlzIHJlYXNvbiwgZHVtbXkgdGV4dCB1c3VhbGx5IGNvbnNpc3RzIG9mIGEgbW9yZSBvciBsZXNzIHJhbmRvbSBzZXJpZXMgb2Ygd29yZHMgb3Igc3lsbGFibGVzLiBUaGlzIHByZXZlbnRzIHJlcGV0aXRpdmUgcGF0dGVybnMgZnJvbSBpbXBhaXJpbmcgdGhlIG92ZXJhbGwgdmlzdWFsIGltcHJlc3Npb24gYW5kIGZhY2lsaXRhdGVzIHRoZSBjb21wYXJpc29uIG9mIGRpZmZlcmVudCB0eXBlZmFjZXMuPC9wPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im15LTQiPlNvbHV0aW9uczwvaDQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1tdXRlZCI+RnVydGhlcm1vcmUsIGl0IGlzIGFkdmFudGFnZW91cyB3aGVuIHRoZSBkdW1teSB0ZXh0IGlzIHJlbGF0aXZlbHkgcmVhbGlzdGljIHNvIHRoYXQgdGhlIGxheW91dCBpbXByZXNzaW9uIG9mIHRoZSBmaW5hbCBwdWJsaWNhdGlvbiBpcyBub3QgY29tcHJvbWlzZWQuPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbXV0ZWQgbWItMCI+T25lIGRpc2FkdmFudGFnZSBvZiBMb3J1bSBJcHN1bSBpcyB0aGF0IGluIExhdGluIGNlcnRhaW4gbGV0dGVycyBhcHBlYXIgbW9yZSBmcmVxdWVudGx5IHRoYW4gb3RoZXJzIC0gd2hpY2ggY3JlYXRlcyBhIGRpc3RpbmN0IHZpc3VhbCBpbXByZXNzaW9uLiBNb3Jlb3ZlciwgaW4gTGF0aW4gb25seSB3b3JkcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHNlbnRlbmNlcyBhcmUgY2FwaXRhbGl6ZWQuPC9wPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im15LTQiPlJlc3VsdHM8L2g0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbXV0ZWQiPkRpc2FkdmFudGFnZSBvZiBMb3J1bSBJcHN1bSBpcyB0aGF0IGluIExhdGluIGNlcnRhaW4gbGV0dGVycyBhcHBlYXIgbW9yZSBmcmVxdWVudGx5IHRoYW4gb3RoZXJzIC0gd2hpY2ggY3JlYXRlcyBhIGRpc3RpbmN0IHZpc3VhbCBpbXByZXNzaW9uLiBNb3Jlb3ZlciwgaW4gTGF0aW4gb25seSB3b3JkcyBhdCB0aGUgYmVnaW5uaW5nIG9mIHNlbnRlbmNlcyBhcmUgY2FwaXRhbGl6ZWQuIEl0IGlzIGFkdmFudGFnZW91cyB3aGVuIHRoZSBkdW1teSB0ZXh0IGlzIHJlbGF0aXZlbHkgcmVhbGlzdGljIHNvIHRoYXQgdGhlIGxheW91dCBpbXByZXNzaW9uIG9mIHRoZSBmaW5hbCBwdWJsaWNhdGlvbiBpcyBub3QgY29tcHJvbWlzZWQuPC9wPg0KDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciIGlkPSJjb3VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCBjb2wtNiBtdC00IHB0LTIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb3VudGVyLWJveCB0ZXh0LWNlbnRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL2lsbHVzdHJhdG9yL0Fzc2V0MTkwLnN2ZyIgY2xhc3M9ImF2YXRhciBhdmF0YXItc21hbGwiIGFsdD0iIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0ibWItMCBtdC00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Y291bnRUbyA6c3RhcnRWYWw9IjMiIDpkdXJhdGlvbj0iNDAwMCIgOmVuZFZhbD0iMTUiPjwvY291bnRUbz4lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjb3VudGVyLWhlYWQgdGV4dC1tdXRlZCI+RGVwcml0aWF0aW9uPC9oNj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1lbmQgY291bnRlciBib3gtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC02IG10LTQgcHQtMiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvdW50ZXItYm94IHRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJpbWFnZXMvaWxsdXN0cmF0b3IvQXNzZXQxODkuc3ZnIiBjbGFzcz0iYXZhdGFyIGF2YXRhci1zbWFsbCIgYWx0PSIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJtYi0wIG10LTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb3VudFRvIDpzdGFydFZhbD0iMSIgOmR1cmF0aW9uPSI0MDAwIiA6ZW5kVmFsPSIxOTUiPjwvY291bnRUbz4lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJjb3VudGVyLWhlYWQgdGV4dC1tdXRlZCI+UHJvZml0PC9oNj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1lbmQgY291bnRlciBib3gtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC02IG10LTQgcHQtMiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvdW50ZXItYm94IHRleHQtY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJpbWFnZXMvaWxsdXN0cmF0b3IvQXNzZXQxODcuc3ZnIiBjbGFzcz0iYXZhdGFyIGF2YXRhci1zbWFsbCIgYWx0PSIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJtYi0wIG10LTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjb3VudFRvIDpzdGFydFZhbD0iMyIgOmR1cmF0aW9uPSI0MDAwIiA6ZW5kVmFsPSI5OCI+PC9jb3VudFRvPiUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9ImNvdW50ZXItaGVhZCB0ZXh0LW11dGVkIj5DYXNlIFNvbHZlZDwvaDY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tZW5kIGNvdW50ZXIgYm94LS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1lbmQgcm93LS0+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibXktNCI+Q2xpZW50IEZlZWRiYWNrPC9oND4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtNCBiZy1saWdodCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtbXV0ZWQgaDYgZm9udC1pdGFsaWMiPiIgSXQgc2VlbXMgdGhhdCBvbmx5IGZyYWdtZW50cyBvZiB0aGUgb3JpZ2luYWwgdGV4dCByZW1haW4gaW4gdGhlIExvcmVtIElwc3VtIHRleHRzIHVzZWQgdG9kYXkuIFRoZSBtb3N0IHdlbGwta25vd24gZHVtbXkgdGV4dCBpcyB0aGUgJ0xvcmVtIElwc3VtJywgd2hpY2ggaXMgc2FpZCB0byBoYXZlIG9yaWdpbmF0ZWQgaW4gdGhlIDE2dGggY2VudHVyeS4gIjwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaW1hZ2VzL2NsaWVudC8wMS5qcGciIGNsYXNzPSJpbWctZmx1aWQgYXZhdGFyIGF2YXRhci1zbWFsbCByb3VuZGVkLWNpcmNsZSBteC1hdXRvIHNoYWRvdyIgYWx0PSIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCBtYi0wIG10LTMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxpIGNsYXNzPSJtZGkgbWRpLXN0YXIgdGV4dC13YXJuaW5nIj48L2k+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj48aSBjbGFzcz0ibWRpIG1kaS1zdGFyIHRleHQtd2FybmluZyI+PC9pPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibGlzdC1pbmxpbmUtaXRlbSI+PGkgY2xhc3M9Im1kaSBtZGktc3RhciB0ZXh0LXdhcm5pbmciPjwvaT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imxpc3QtaW5saW5lLWl0ZW0iPjxpIGNsYXNzPSJtZGkgbWRpLXN0YXIgdGV4dC13YXJuaW5nIj48L2k+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIj48aSBjbGFzcz0ibWRpIG1kaS1zdGFyIHRleHQtd2FybmluZyI+PC9pPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9InRleHQtcHJpbWFyeSI+LSBUaG9tYXMgSXNyYWVsIDxzbWFsbCBjbGFzcz0idGV4dC1tdXRlZCI+Qy5FLk88L3NtYWxsPjwvaDY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPCEtLWVuZCBjb2wtLT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPCEtLWVuZCByb3ctLT4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDwhLS1lbmQgY29udGFpbmVyLS0+DQogICAgPC9zZWN0aW9uPg0KICAgIDwhLS1lbmQgc2VjdGlvbi0tPg0KICAgIDwhLS1lbmQgc2VjdGlvbi0tPg0KICAgIDxGb290ZXIgLz4NCiAgICA8IS0tIEZvb3RlciBFbmQgLS0+DQogICAgPFN3aXRjaGVyIC8+DQogICAgPCEtLSBCYWNrIHRvIHRvcCAtLT4NCiAgICA8YSBocmVmPSJqYXZhc2NyaXB0OiB2b2lkKDApOyIgY2xhc3M9ImJ0biBidG4taWNvbiBidG4tcHJpbWFyeSBiYWNrLXRvLXRvcCIgaWQ9ImJhY2stdG8tdG9wIiB2LXNjcm9sbC10bz0iJyN0b3BuYXYnIj4NCiAgICAgICAgPGFycm93LXVwLWljb24gY2xhc3M9Imljb25zIj48L2Fycm93LXVwLWljb24+DQogICAgPC9hPg0KICAgIDwhLS0gQmFjayB0byB0b3AgLS0+DQo8L2Rpdj4NCg=="},null]}